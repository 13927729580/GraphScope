// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cluster.proto

package com.alibaba.maxgraph.proto;

public interface ClusterStateProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ClusterStateProto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .NodeInfo nodes = 1;</code>
   */
  java.util.List<com.alibaba.maxgraph.proto.NodeInfo> 
      getNodesList();
  /**
   * <code>repeated .NodeInfo nodes = 1;</code>
   */
  com.alibaba.maxgraph.proto.NodeInfo getNodes(int index);
  /**
   * <code>repeated .NodeInfo nodes = 1;</code>
   */
  int getNodesCount();
  /**
   * <code>repeated .NodeInfo nodes = 1;</code>
   */
  java.util.List<? extends com.alibaba.maxgraph.proto.NodeInfoOrBuilder> 
      getNodesOrBuilderList();
  /**
   * <code>repeated .NodeInfo nodes = 1;</code>
   */
  com.alibaba.maxgraph.proto.NodeInfoOrBuilder getNodesOrBuilder(
      int index);

  /**
   * <pre>
   * map - partitionID : { "serverID" : "STATE" }
   * </pre>
   *
   * <code>map&lt;int32, .PartitionInfo&gt; partitions = 2;</code>
   */
  int getPartitionsCount();
  /**
   * <pre>
   * map - partitionID : { "serverID" : "STATE" }
   * </pre>
   *
   * <code>map&lt;int32, .PartitionInfo&gt; partitions = 2;</code>
   */
  boolean containsPartitions(
      int key);
  /**
   * Use {@link #getPartitionsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, com.alibaba.maxgraph.proto.PartitionInfo>
  getPartitions();
  /**
   * <pre>
   * map - partitionID : { "serverID" : "STATE" }
   * </pre>
   *
   * <code>map&lt;int32, .PartitionInfo&gt; partitions = 2;</code>
   */
  java.util.Map<java.lang.Integer, com.alibaba.maxgraph.proto.PartitionInfo>
  getPartitionsMap();
  /**
   * <pre>
   * map - partitionID : { "serverID" : "STATE" }
   * </pre>
   *
   * <code>map&lt;int32, .PartitionInfo&gt; partitions = 2;</code>
   */

  com.alibaba.maxgraph.proto.PartitionInfo getPartitionsOrDefault(
      int key,
      com.alibaba.maxgraph.proto.PartitionInfo defaultValue);
  /**
   * <pre>
   * map - partitionID : { "serverID" : "STATE" }
   * </pre>
   *
   * <code>map&lt;int32, .PartitionInfo&gt; partitions = 2;</code>
   */

  com.alibaba.maxgraph.proto.PartitionInfo getPartitionsOrThrow(
      int key);

  /**
   * <code>optional int64 version = 3;</code>
   */
  long getVersion();

  /**
   * <pre>
   * node:  { entityID: entityState }
   * </pre>
   *
   * <code>map&lt;int32, .NodeStateProto&gt; expectedStateMap = 4;</code>
   */
  int getExpectedStateMapCount();
  /**
   * <pre>
   * node:  { entityID: entityState }
   * </pre>
   *
   * <code>map&lt;int32, .NodeStateProto&gt; expectedStateMap = 4;</code>
   */
  boolean containsExpectedStateMap(
      int key);
  /**
   * Use {@link #getExpectedStateMapMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, com.alibaba.maxgraph.proto.NodeStateProto>
  getExpectedStateMap();
  /**
   * <pre>
   * node:  { entityID: entityState }
   * </pre>
   *
   * <code>map&lt;int32, .NodeStateProto&gt; expectedStateMap = 4;</code>
   */
  java.util.Map<java.lang.Integer, com.alibaba.maxgraph.proto.NodeStateProto>
  getExpectedStateMapMap();
  /**
   * <pre>
   * node:  { entityID: entityState }
   * </pre>
   *
   * <code>map&lt;int32, .NodeStateProto&gt; expectedStateMap = 4;</code>
   */

  com.alibaba.maxgraph.proto.NodeStateProto getExpectedStateMapOrDefault(
      int key,
      com.alibaba.maxgraph.proto.NodeStateProto defaultValue);
  /**
   * <pre>
   * node:  { entityID: entityState }
   * </pre>
   *
   * <code>map&lt;int32, .NodeStateProto&gt; expectedStateMap = 4;</code>
   */

  com.alibaba.maxgraph.proto.NodeStateProto getExpectedStateMapOrThrow(
      int key);
}
