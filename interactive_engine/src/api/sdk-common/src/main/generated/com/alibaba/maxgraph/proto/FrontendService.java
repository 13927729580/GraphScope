// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdk/client_frontend_protocol.proto

package com.alibaba.maxgraph.proto;

/**
 * Protobuf service {@code FrontendService}
 */
public  abstract class FrontendService
    implements com.google.protobuf.Service {
  protected FrontendService() {}

  public interface Interface {
    /**
     * <pre>
     * query
     * </pre>
     *
     * <code>rpc executeQuery(.QueryRequest) returns (.QueryResponse);</code>
     */
    public abstract void executeQuery(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.QueryRequest request,
        com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.QueryResponse> done);

    /**
     * <pre>
     * Prepare statement api .
     * </pre>
     *
     * <code>rpc prepareQuery(.PrepareRequest) returns (.Response);</code>
     */
    public abstract void prepareQuery(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.PrepareRequest request,
        com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.Response> done);

    /**
     * <code>rpc removePrepare(.PrepareRequest) returns (.Response);</code>
     */
    public abstract void removePrepare(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.PrepareRequest request,
        com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.Response> done);

    /**
     * <code>rpc listPrepare(.Empty) returns (.PrepareNames);</code>
     */
    public abstract void listPrepare(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.Empty request,
        com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.PrepareNames> done);

    /**
     * <code>rpc getRealTimeMetric(.MetricInfoRequest) returns (.MetricInfoResp);</code>
     */
    public abstract void getRealTimeMetric(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.MetricInfoRequest request,
        com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.MetricInfoResp> done);

    /**
     * <code>rpc getAllRealTimeMetrics(.Request) returns (.AllMetricsInfoResp);</code>
     */
    public abstract void getAllRealTimeMetrics(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.Request request,
        com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.AllMetricsInfoResp> done);

  }

  public static com.google.protobuf.Service newReflectiveService(
      final Interface impl) {
    return new FrontendService() {
      @java.lang.Override
      public  void executeQuery(
          com.google.protobuf.RpcController controller,
          com.alibaba.maxgraph.proto.QueryRequest request,
          com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.QueryResponse> done) {
        impl.executeQuery(controller, request, done);
      }

      @java.lang.Override
      public  void prepareQuery(
          com.google.protobuf.RpcController controller,
          com.alibaba.maxgraph.proto.PrepareRequest request,
          com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.Response> done) {
        impl.prepareQuery(controller, request, done);
      }

      @java.lang.Override
      public  void removePrepare(
          com.google.protobuf.RpcController controller,
          com.alibaba.maxgraph.proto.PrepareRequest request,
          com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.Response> done) {
        impl.removePrepare(controller, request, done);
      }

      @java.lang.Override
      public  void listPrepare(
          com.google.protobuf.RpcController controller,
          com.alibaba.maxgraph.proto.Empty request,
          com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.PrepareNames> done) {
        impl.listPrepare(controller, request, done);
      }

      @java.lang.Override
      public  void getRealTimeMetric(
          com.google.protobuf.RpcController controller,
          com.alibaba.maxgraph.proto.MetricInfoRequest request,
          com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.MetricInfoResp> done) {
        impl.getRealTimeMetric(controller, request, done);
      }

      @java.lang.Override
      public  void getAllRealTimeMetrics(
          com.google.protobuf.RpcController controller,
          com.alibaba.maxgraph.proto.Request request,
          com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.AllMetricsInfoResp> done) {
        impl.getAllRealTimeMetrics(controller, request, done);
      }

    };
  }

  public static com.google.protobuf.BlockingService
      newReflectiveBlockingService(final BlockingInterface impl) {
    return new com.google.protobuf.BlockingService() {
      public final com.google.protobuf.Descriptors.ServiceDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }

      public final com.google.protobuf.Message callBlockingMethod(
          com.google.protobuf.Descriptors.MethodDescriptor method,
          com.google.protobuf.RpcController controller,
          com.google.protobuf.Message request)
          throws com.google.protobuf.ServiceException {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.callBlockingMethod() given method descriptor for " +
            "wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return impl.executeQuery(controller, (com.alibaba.maxgraph.proto.QueryRequest)request);
          case 1:
            return impl.prepareQuery(controller, (com.alibaba.maxgraph.proto.PrepareRequest)request);
          case 2:
            return impl.removePrepare(controller, (com.alibaba.maxgraph.proto.PrepareRequest)request);
          case 3:
            return impl.listPrepare(controller, (com.alibaba.maxgraph.proto.Empty)request);
          case 4:
            return impl.getRealTimeMetric(controller, (com.alibaba.maxgraph.proto.MetricInfoRequest)request);
          case 5:
            return impl.getAllRealTimeMetrics(controller, (com.alibaba.maxgraph.proto.Request)request);
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

      public final com.google.protobuf.Message
          getRequestPrototype(
          com.google.protobuf.Descriptors.MethodDescriptor method) {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.getRequestPrototype() given method " +
            "descriptor for wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return com.alibaba.maxgraph.proto.QueryRequest.getDefaultInstance();
          case 1:
            return com.alibaba.maxgraph.proto.PrepareRequest.getDefaultInstance();
          case 2:
            return com.alibaba.maxgraph.proto.PrepareRequest.getDefaultInstance();
          case 3:
            return com.alibaba.maxgraph.proto.Empty.getDefaultInstance();
          case 4:
            return com.alibaba.maxgraph.proto.MetricInfoRequest.getDefaultInstance();
          case 5:
            return com.alibaba.maxgraph.proto.Request.getDefaultInstance();
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

      public final com.google.protobuf.Message
          getResponsePrototype(
          com.google.protobuf.Descriptors.MethodDescriptor method) {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.getResponsePrototype() given method " +
            "descriptor for wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return com.alibaba.maxgraph.proto.QueryResponse.getDefaultInstance();
          case 1:
            return com.alibaba.maxgraph.proto.Response.getDefaultInstance();
          case 2:
            return com.alibaba.maxgraph.proto.Response.getDefaultInstance();
          case 3:
            return com.alibaba.maxgraph.proto.PrepareNames.getDefaultInstance();
          case 4:
            return com.alibaba.maxgraph.proto.MetricInfoResp.getDefaultInstance();
          case 5:
            return com.alibaba.maxgraph.proto.AllMetricsInfoResp.getDefaultInstance();
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

    };
  }

  /**
   * <pre>
   * query
   * </pre>
   *
   * <code>rpc executeQuery(.QueryRequest) returns (.QueryResponse);</code>
   */
  public abstract void executeQuery(
      com.google.protobuf.RpcController controller,
      com.alibaba.maxgraph.proto.QueryRequest request,
      com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.QueryResponse> done);

  /**
   * <pre>
   * Prepare statement api .
   * </pre>
   *
   * <code>rpc prepareQuery(.PrepareRequest) returns (.Response);</code>
   */
  public abstract void prepareQuery(
      com.google.protobuf.RpcController controller,
      com.alibaba.maxgraph.proto.PrepareRequest request,
      com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.Response> done);

  /**
   * <code>rpc removePrepare(.PrepareRequest) returns (.Response);</code>
   */
  public abstract void removePrepare(
      com.google.protobuf.RpcController controller,
      com.alibaba.maxgraph.proto.PrepareRequest request,
      com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.Response> done);

  /**
   * <code>rpc listPrepare(.Empty) returns (.PrepareNames);</code>
   */
  public abstract void listPrepare(
      com.google.protobuf.RpcController controller,
      com.alibaba.maxgraph.proto.Empty request,
      com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.PrepareNames> done);

  /**
   * <code>rpc getRealTimeMetric(.MetricInfoRequest) returns (.MetricInfoResp);</code>
   */
  public abstract void getRealTimeMetric(
      com.google.protobuf.RpcController controller,
      com.alibaba.maxgraph.proto.MetricInfoRequest request,
      com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.MetricInfoResp> done);

  /**
   * <code>rpc getAllRealTimeMetrics(.Request) returns (.AllMetricsInfoResp);</code>
   */
  public abstract void getAllRealTimeMetrics(
      com.google.protobuf.RpcController controller,
      com.alibaba.maxgraph.proto.Request request,
      com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.AllMetricsInfoResp> done);

  public static final
      com.google.protobuf.Descriptors.ServiceDescriptor
      getDescriptor() {
    return com.alibaba.maxgraph.proto.ClientFrontendProtocol.getDescriptor().getServices().get(0);
  }
  public final com.google.protobuf.Descriptors.ServiceDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }

  public final void callMethod(
      com.google.protobuf.Descriptors.MethodDescriptor method,
      com.google.protobuf.RpcController controller,
      com.google.protobuf.Message request,
      com.google.protobuf.RpcCallback<
        com.google.protobuf.Message> done) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.callMethod() given method descriptor for wrong " +
        "service type.");
    }
    switch(method.getIndex()) {
      case 0:
        this.executeQuery(controller, (com.alibaba.maxgraph.proto.QueryRequest)request,
          com.google.protobuf.RpcUtil.<com.alibaba.maxgraph.proto.QueryResponse>specializeCallback(
            done));
        return;
      case 1:
        this.prepareQuery(controller, (com.alibaba.maxgraph.proto.PrepareRequest)request,
          com.google.protobuf.RpcUtil.<com.alibaba.maxgraph.proto.Response>specializeCallback(
            done));
        return;
      case 2:
        this.removePrepare(controller, (com.alibaba.maxgraph.proto.PrepareRequest)request,
          com.google.protobuf.RpcUtil.<com.alibaba.maxgraph.proto.Response>specializeCallback(
            done));
        return;
      case 3:
        this.listPrepare(controller, (com.alibaba.maxgraph.proto.Empty)request,
          com.google.protobuf.RpcUtil.<com.alibaba.maxgraph.proto.PrepareNames>specializeCallback(
            done));
        return;
      case 4:
        this.getRealTimeMetric(controller, (com.alibaba.maxgraph.proto.MetricInfoRequest)request,
          com.google.protobuf.RpcUtil.<com.alibaba.maxgraph.proto.MetricInfoResp>specializeCallback(
            done));
        return;
      case 5:
        this.getAllRealTimeMetrics(controller, (com.alibaba.maxgraph.proto.Request)request,
          com.google.protobuf.RpcUtil.<com.alibaba.maxgraph.proto.AllMetricsInfoResp>specializeCallback(
            done));
        return;
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public final com.google.protobuf.Message
      getRequestPrototype(
      com.google.protobuf.Descriptors.MethodDescriptor method) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.getRequestPrototype() given method " +
        "descriptor for wrong service type.");
    }
    switch(method.getIndex()) {
      case 0:
        return com.alibaba.maxgraph.proto.QueryRequest.getDefaultInstance();
      case 1:
        return com.alibaba.maxgraph.proto.PrepareRequest.getDefaultInstance();
      case 2:
        return com.alibaba.maxgraph.proto.PrepareRequest.getDefaultInstance();
      case 3:
        return com.alibaba.maxgraph.proto.Empty.getDefaultInstance();
      case 4:
        return com.alibaba.maxgraph.proto.MetricInfoRequest.getDefaultInstance();
      case 5:
        return com.alibaba.maxgraph.proto.Request.getDefaultInstance();
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public final com.google.protobuf.Message
      getResponsePrototype(
      com.google.protobuf.Descriptors.MethodDescriptor method) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.getResponsePrototype() given method " +
        "descriptor for wrong service type.");
    }
    switch(method.getIndex()) {
      case 0:
        return com.alibaba.maxgraph.proto.QueryResponse.getDefaultInstance();
      case 1:
        return com.alibaba.maxgraph.proto.Response.getDefaultInstance();
      case 2:
        return com.alibaba.maxgraph.proto.Response.getDefaultInstance();
      case 3:
        return com.alibaba.maxgraph.proto.PrepareNames.getDefaultInstance();
      case 4:
        return com.alibaba.maxgraph.proto.MetricInfoResp.getDefaultInstance();
      case 5:
        return com.alibaba.maxgraph.proto.AllMetricsInfoResp.getDefaultInstance();
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public static Stub newStub(
      com.google.protobuf.RpcChannel channel) {
    return new Stub(channel);
  }

  public static final class Stub extends com.alibaba.maxgraph.proto.FrontendService implements Interface {
    private Stub(com.google.protobuf.RpcChannel channel) {
      this.channel = channel;
    }

    private final com.google.protobuf.RpcChannel channel;

    public com.google.protobuf.RpcChannel getChannel() {
      return channel;
    }

    public  void executeQuery(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.QueryRequest request,
        com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.QueryResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(0),
        controller,
        request,
        com.alibaba.maxgraph.proto.QueryResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.alibaba.maxgraph.proto.QueryResponse.class,
          com.alibaba.maxgraph.proto.QueryResponse.getDefaultInstance()));
    }

    public  void prepareQuery(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.PrepareRequest request,
        com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.Response> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(1),
        controller,
        request,
        com.alibaba.maxgraph.proto.Response.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.alibaba.maxgraph.proto.Response.class,
          com.alibaba.maxgraph.proto.Response.getDefaultInstance()));
    }

    public  void removePrepare(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.PrepareRequest request,
        com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.Response> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(2),
        controller,
        request,
        com.alibaba.maxgraph.proto.Response.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.alibaba.maxgraph.proto.Response.class,
          com.alibaba.maxgraph.proto.Response.getDefaultInstance()));
    }

    public  void listPrepare(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.Empty request,
        com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.PrepareNames> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(3),
        controller,
        request,
        com.alibaba.maxgraph.proto.PrepareNames.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.alibaba.maxgraph.proto.PrepareNames.class,
          com.alibaba.maxgraph.proto.PrepareNames.getDefaultInstance()));
    }

    public  void getRealTimeMetric(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.MetricInfoRequest request,
        com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.MetricInfoResp> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(4),
        controller,
        request,
        com.alibaba.maxgraph.proto.MetricInfoResp.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.alibaba.maxgraph.proto.MetricInfoResp.class,
          com.alibaba.maxgraph.proto.MetricInfoResp.getDefaultInstance()));
    }

    public  void getAllRealTimeMetrics(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.Request request,
        com.google.protobuf.RpcCallback<com.alibaba.maxgraph.proto.AllMetricsInfoResp> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(5),
        controller,
        request,
        com.alibaba.maxgraph.proto.AllMetricsInfoResp.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.alibaba.maxgraph.proto.AllMetricsInfoResp.class,
          com.alibaba.maxgraph.proto.AllMetricsInfoResp.getDefaultInstance()));
    }
  }

  public static BlockingInterface newBlockingStub(
      com.google.protobuf.BlockingRpcChannel channel) {
    return new BlockingStub(channel);
  }

  public interface BlockingInterface {
    public com.alibaba.maxgraph.proto.QueryResponse executeQuery(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.QueryRequest request)
        throws com.google.protobuf.ServiceException;

    public com.alibaba.maxgraph.proto.Response prepareQuery(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.PrepareRequest request)
        throws com.google.protobuf.ServiceException;

    public com.alibaba.maxgraph.proto.Response removePrepare(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.PrepareRequest request)
        throws com.google.protobuf.ServiceException;

    public com.alibaba.maxgraph.proto.PrepareNames listPrepare(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.Empty request)
        throws com.google.protobuf.ServiceException;

    public com.alibaba.maxgraph.proto.MetricInfoResp getRealTimeMetric(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.MetricInfoRequest request)
        throws com.google.protobuf.ServiceException;

    public com.alibaba.maxgraph.proto.AllMetricsInfoResp getAllRealTimeMetrics(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.Request request)
        throws com.google.protobuf.ServiceException;
  }

  private static final class BlockingStub implements BlockingInterface {
    private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
      this.channel = channel;
    }

    private final com.google.protobuf.BlockingRpcChannel channel;

    public com.alibaba.maxgraph.proto.QueryResponse executeQuery(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.QueryRequest request)
        throws com.google.protobuf.ServiceException {
      return (com.alibaba.maxgraph.proto.QueryResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(0),
        controller,
        request,
        com.alibaba.maxgraph.proto.QueryResponse.getDefaultInstance());
    }


    public com.alibaba.maxgraph.proto.Response prepareQuery(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.PrepareRequest request)
        throws com.google.protobuf.ServiceException {
      return (com.alibaba.maxgraph.proto.Response) channel.callBlockingMethod(
        getDescriptor().getMethods().get(1),
        controller,
        request,
        com.alibaba.maxgraph.proto.Response.getDefaultInstance());
    }


    public com.alibaba.maxgraph.proto.Response removePrepare(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.PrepareRequest request)
        throws com.google.protobuf.ServiceException {
      return (com.alibaba.maxgraph.proto.Response) channel.callBlockingMethod(
        getDescriptor().getMethods().get(2),
        controller,
        request,
        com.alibaba.maxgraph.proto.Response.getDefaultInstance());
    }


    public com.alibaba.maxgraph.proto.PrepareNames listPrepare(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.Empty request)
        throws com.google.protobuf.ServiceException {
      return (com.alibaba.maxgraph.proto.PrepareNames) channel.callBlockingMethod(
        getDescriptor().getMethods().get(3),
        controller,
        request,
        com.alibaba.maxgraph.proto.PrepareNames.getDefaultInstance());
    }


    public com.alibaba.maxgraph.proto.MetricInfoResp getRealTimeMetric(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.MetricInfoRequest request)
        throws com.google.protobuf.ServiceException {
      return (com.alibaba.maxgraph.proto.MetricInfoResp) channel.callBlockingMethod(
        getDescriptor().getMethods().get(4),
        controller,
        request,
        com.alibaba.maxgraph.proto.MetricInfoResp.getDefaultInstance());
    }


    public com.alibaba.maxgraph.proto.AllMetricsInfoResp getAllRealTimeMetrics(
        com.google.protobuf.RpcController controller,
        com.alibaba.maxgraph.proto.Request request)
        throws com.google.protobuf.ServiceException {
      return (com.alibaba.maxgraph.proto.AllMetricsInfoResp) channel.callBlockingMethod(
        getDescriptor().getMethods().get(5),
        controller,
        request,
        com.alibaba.maxgraph.proto.AllMetricsInfoResp.getDefaultInstance());
    }

  }

  // @@protoc_insertion_point(class_scope:FrontendService)
}

